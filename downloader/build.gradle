apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

def safeVersion(prop, fallback) {
    return rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

android {
    compileSdkVersion safeVersion('compileSdkVersion', 28)
    defaultConfig {
        minSdkVersion safeVersion('minSdkVersion', 19)
        targetSdkVersion safeVersion('targetSdkVersion', 28)
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation "com.android.support:support-v4:${safeVersion("supportLibVersion", "28.0.0")}"
    api "com.squareup.okhttp3:okhttp:${safeVersion("okhttp", "3.12.0")}"
    api "android.arch.persistence.room:runtime:${safeVersion("room-runtime", "1.1.1")}"
    annotationProcessor "android.arch.persistence.room:compiler:${safeVersion("room-compiler", "1.1.1")}"
}

version = "0.0.1"
group = "com.artzok.downloader"
def siteUrl = "https://github.com/artzok/repos"
def gitUrl = "https://github.com/artzok/repos.git"

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'downloader'
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'artzok'
                        name 'mr.artzok'
                        email 'mr.artzok@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.User")
    key = properties.getProperty("bintray.ApiKey")
    configurations = ['archives']
    pkg {
        repo = "artzok-artzok"
        name = "downloader"
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}

